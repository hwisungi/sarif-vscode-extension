{
    "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
    "version": "2.1.0",
    "runs": [
        {
            "tool": {
                "driver": {
                    "name": "ExpressionTestAnalyzer",
                    "version": "1.0.0"
                }
            },
            "results": [
                {
                    "ruleId": "EXPR001",
                    "message": {
                        "text": "Variable expression test"
                    },
                    "level": "warning",
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "file:///example/expressions.cpp"
                                },
                                "region": {
                                    "startLine": 20,
                                    "startColumn": 10
                                }
                            }
                        }
                    ],
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "file:///example/expressions.cpp"
                                                    },
                                                    "region": {
                                                        "startLine": 15,
                                                        "startColumn": 5
                                                    }
                                                }
                                            },
                                            "nestingLevel": 1,
                                            "state": {
                                                "ptr": {
                                                    "text": "{expr} is currently null"
                                                },
                                                "counter": {
                                                    "text": "increment {expr} by 1, current value is 5"
                                                },
                                                "condition": {
                                                    "text": "if ({expr} != null && counter > 0) execute_block()"
                                                },
                                                "expression": {
                                                    "text": "Complex check: ({expr} == null) ? default_value : {expr}->getValue()"
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "file:///example/expressions.cpp"
                                                    },
                                                    "region": {
                                                        "startLine": 18,
                                                        "startColumn": 8
                                                    }
                                                }
                                            },
                                            "nestingLevel": 1,
                                            "state": {
                                                "ptr": {
                                                    "text": "assigned {expr} to malloc() result"
                                                },
                                                "counter": {
                                                    "text": "decremented {expr} to 4"
                                                },
                                                "status": {
                                                    "text": "Evaluating: {expr} shows current validation state"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}
